package com.word_training.api.mapper;

import com.mongodb.client.model.Filters;
import org.bson.Document;
import org.bson.conversions.Bson;
import org.bson.types.ObjectId;

import java.time.Clock;
import java.time.OffsetDateTime;
import java.util.Optional;

public interface BaseMapper {

    default Document updateModificationDate(Clock clock){
        return Optional.of(OffsetDateTime.now(clock))
                .map(date -> "{modificationDate:{'$date':'"+ date +"'}}")
                .map(Document::parse)
                .map(dateUpdate -> new Document().append("$set", dateUpdate))
                .orElseGet(Document::new);
    }

    default Bson filterById(String id){
        return Filters.eq("_id",new ObjectId(id));
    }

    default void setOptionalUpdate(Document update, String field, String fieldName) {
        Optional.ofNullable(field)
                .ifPresent(value -> update.append(fieldName, value));
    }

    default String setIdAutogenerated(Document update, String fieldName) {
        var id = new ObjectId().toString();
        update.append(fieldName, id);
        return id;
    }
}
